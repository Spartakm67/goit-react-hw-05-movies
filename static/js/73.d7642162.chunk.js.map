{"version":3,"file":"static/js/73.d7642162.chunk.js","mappings":"qQAEaA,EAAWC,EAAAA,EAAAA,GAAH,4QAYRC,EAAWD,EAAAA,EAAAA,GAAH,uEAIRE,EAAOF,EAAAA,EAAAA,GAAH,0CAGJG,EAAYH,EAAAA,EAAAA,EAAH,sC,4CC2BtBI,IAAAA,OAAAA,KAAqB,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,QACVC,QAAS,IACTC,SAAU,SAGZ,MAjDa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBT,OAdAE,EAAAA,EAAAA,YAAU,WAAM,wCACb,8EACE,KACEC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAaM,EAAKC,KAEnB,GAGF,CAFC,MAAOC,GACPhB,IAAAA,OAAAA,QAAwBgB,EACzB,CARH,4CADa,uBAAC,WAAD,wBAWbC,EACF,GAAE,CAACR,KAGD,SAACd,EAAD,UACGY,EAAUW,OAAS,EAChBX,EAAUY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACZ,UAAC1B,EAAD,YACE,gBACE2B,IAAKF,EAAY,yCACuBA,GAC9BG,EACVC,IAAI,QACJC,QAAQ,OACR1B,MAAO,OAGT,SAACH,EAAD,UAAOuB,KACP,UAACtB,EAAD,0BAAwBwB,OAXXH,EADH,IAeT,8CAGd,C,uKC9CYQ,EAAW,gCACXC,EAAU,mCCGhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEGC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,EAAnD,OAFH,uBACCf,EADD,EACCA,KADD,kBAIEA,GAJF,kEAQA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFAEGF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,yBAAsEI,EAAtE,OAFH,uBACGnB,EADH,EACGA,KADH,kBAIEA,GAJF,kEAQA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,yFACkBW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BR,EAA/B,oBAA6CS,EAA7C,OADlB,uBACGf,EADH,EACGA,KADH,kBAGEA,GAHF,kEAOA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BQ,GAA/B,yFAEGW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BR,EAA/B,4BAAqDS,EAArD,OAFH,uBACGf,EADH,EACGA,KADH,kBAIEA,GAJF,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js","services/baseURL.js","services/getDATA.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\nlist-style: none;\ndisplay: grid;\nmax-width: 1800px;\ngrid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\ngrid-auto-rows: 300px;\ngrid-gap: 12px;\njustify-content: center;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 20px;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n  `;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { CastItem, CastList, Character, Name } from './Cast.styled';\nimport Notiflix from 'notiflix';\nimport { getMovieCredits } from '../../services/getDATA'; \nimport defaultImage from '../../images/defaultImage.png'; \n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n useEffect(() => {\n    async function getCasts() {\n      try {\n        getMovieCredits(movieId).then(data => {\n          setMovieCast(data.cast);\n          \n        });\n      } catch (err) {\n        Notiflix.Notify.failure(err);\n      }\n    }\n    getCasts();\n }, [movieId]);\n    \n return (\n    <CastList>\n      {movieCast.length > 0\n        ? movieCast.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                        : defaultImage}\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={150}\n                // height={200}\n              />\n              <Name>{name}</Name>\n              <Character> Character: {character}</Character>\n            </CastItem>\n          ))\n             : 'There is no information about cast members'}\n    </CastList>\n  );\n};\n\nNotiflix.Notify.init({\n  width: '420px',\n  position: 'center-top',\n  distance: '100px',\n  timeout: 2000,\n  fontSize: '20px',\n});\n\nexport default Cast;","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const KEY_API = '2051bbcb32f4c1cda2d3fefb48b3cd3d';","import axios from 'axios';\nimport { BASE_URL, KEY_API } from './baseURL';\n\n//***The list of the most popular Movies for Today to create a collection on the Main Page\nexport async function getTrendingMovies() {\nconst { data } =\n    await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***Searching for a movie by keyword on the movies page\nexport async function getMovies(searchValue) {\n  const { data } =\n    await axios.get(`${BASE_URL}/search/movie?api_key=${KEY_API}&page=1&query=${searchValue}\n`);\n  return data;\n};\n\n// ***The request of full movie information for a movie page\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***The request of cast information for a movie page\nexport async function getMovieCredits(id) {\n  const { data } =\n    await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***The request of reviews for a movie page\nexport async function getMovieReviews(id) {\n  const { data } =\n    await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}\n`);\n  return data;\n};\n"],"names":["CastList","styled","CastItem","Name","Character","Notiflix","width","position","distance","timeout","fontSize","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCredits","then","data","cast","err","getCasts","length","map","id","name","profile_path","character","src","defaultImage","alt","loading","BASE_URL","KEY_API","getTrendingMovies","axios","getMovies","searchValue","getMovieDetails"],"sourceRoot":""}