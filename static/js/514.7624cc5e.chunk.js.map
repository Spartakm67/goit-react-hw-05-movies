{"version":3,"file":"static/js/514.7624cc5e.chunk.js","mappings":"2RAEaA,E,QAAYC,EAAAA,EAAH,oF,SCoCtBC,IAAAA,OAAAA,KAAqB,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,OACVC,QAAS,KACTC,SAAU,SAGZ,MAxCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACb,8EACC,KACIC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC1BN,EAAWM,EAAKC,QACnB,GAGJ,CAFK,MAAOC,GACXhB,IAAAA,OAAAA,QAAwBgB,EACzB,CAPF,4CADa,uBAAC,WAAD,wBAUZC,CAAWR,EACd,GAAE,CAACA,KAGF,wBACGF,EAAQW,OAAS,EACdX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADC,KAML,SAACxB,EAAD,wDAIhB,C,mMCpCYyB,EAAW,gCACXC,EAAU,mCCGhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEGC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,EAAnD,OAFH,uBACCV,EADD,EACCA,KADD,kBAIEA,GAJF,kEAQA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFAEGF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,yBAAsEI,EAAtE,OAFH,uBACGd,EADH,EACGA,KADH,kBAIEA,GAJF,kEAQA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,yFACkBI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BD,EAA/B,oBAA6CE,EAA7C,OADlB,uBACGV,EADH,EACGA,KADH,kBAGEA,GAHF,kEAOA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,yFAEGI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BD,EAA/B,4BAAqDE,EAArD,OAFH,uBACGV,EADH,EACGA,KADH,kBAIEA,GAJF,kEAQA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BU,GAA/B,yFAEGI,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BD,EAA/B,4BAAqDE,EAArD,OAFH,uBACGV,EADH,EACGA,KADH,kBAIEA,GAJF,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/baseURL.js","services/getDATA.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NotReview = styled.p`\n  color: #8b00ff;\n  font-weight: 500;\n  font-size: 20px;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { getMovieReviews } from '../../services/getDATA';\nimport { NotReview } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n     async function getReviews() {\n      try {\n          getMovieReviews(movieId).then(data => {\n              setReviews(data.results);\n          });\n          } catch (err) {\n        Notiflix.Notify.failure(err);\n      }\n    }\n      getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length > 0\n        ? reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n              : (<NotReview>\n                  There are not any reviews for this movie</NotReview>)}\n    </ul>\n  );\n};\n\nNotiflix.Notify.init({\n  width: '420px',\n  position: 'center-top',\n  distance: '10px',\n  timeout: 1500,\n  fontSize: '20px',\n});\n\nexport default Reviews;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const KEY_API = '2051bbcb32f4c1cda2d3fefb48b3cd3d';","import axios from 'axios';\nimport { BASE_URL, KEY_API } from './baseURL';\n\n//***The list of the most popular Movies for Today to create a collection on the Main Page\nexport async function getTrendingMovies() {\nconst { data } =\n    await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***Searching for a movie by keyword on the movies page\nexport async function getMovies(searchValue) {\n  const { data } =\n    await axios.get(`${BASE_URL}/search/movie?api_key=${KEY_API}&page=1&query=${searchValue}\n`);\n  return data;\n};\n\n// ***The request of full movie information for a movie page\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***The request of cast information for a movie page\nexport async function getMovieCredits(id) {\n  const { data } =\n    await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***The request of reviews for a movie page\nexport async function getMovieReviews(id) {\n  const { data } =\n    await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}\n`);\n  return data;\n};\n"],"names":["NotReview","styled","Notiflix","width","position","distance","timeout","fontSize","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","data","results","err","getReviews","length","map","author","content","id","BASE_URL","KEY_API","getTrendingMovies","axios","getMovies","searchValue","getMovieDetails","getMovieCredits"],"sourceRoot":""}