{"version":3,"file":"static/js/547.c420ac8e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.js","services/baseURL.js","services/getDATA.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieName = styled.p`\n  padding: 2px;\n  margin-top: 4px;\n  margin-bottom: 0;\n  color: #38598b;\n  margin-bottom: 0;\n\n  &:hover {\n    color: #ff9a3c; \n    font-weight: 500;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  \n&:hover {\ntext-decoration: none;\n}\n`;\n\nexport const MovieLi = styled.li`\n \n  &:hover {\n    color: #ff9a3c;\n  }\n`;","import { MovieName, MovieLi, MovieLink } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MovieLi key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieName>{movie.title} ({movie.release_date.slice(0, 4)})</MovieName>\n          </MovieLink>\n        </MovieLi>\n      ))}\n    </ul>\n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.array\n}","import styled from '@emotion/styled'\n\nexport const Input = styled.input`\n margin-right: 3px;\n`;","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { getMovies } from '../../services/getDATA'; \nimport { Input } from './Movies.styled';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n     \n  const formSubmit = event => {\n    event.preventDefault();\n    const movieName = event.target.name.value;\n\n    if (movieName.trim() === '') {\n      Notiflix.Notify.warning(\n        `Please enter search data`\n      );\n      return;\n    }\n    setSearchParams({ name: movieName });\n    event.target.reset();\n  };\n    \n  useEffect(() => {\n   \n    async function getEffectMovies() {\n      getMovies(name)\n        .then(data => {\n          setMovies(data.results);\n          if (data.results.length > 0) {\n            Notiflix.Notify.success(\n              `We have found the ${data.results.length} movies by your request`\n            );\n          } else {\n            Notiflix.Notify.failure(\n              'Sorry, we have not found any movies for you...please, try again!'\n            );\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n      if (name) {\n        getEffectMovies();\n      }\n  }, [name]);\n  \n  return (\n    <main>\n      <div>\n        <form onSubmit={formSubmit}>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"enter movie name \"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <MoviesList movies={movies} />\n      </div>\n    </main>\n  );\n};\n\nNotiflix.Notify.init({\n  width: '550px',\n  position: 'center-top',\n  distance: '10px',\n  timeout: 1500,\n  fontSize: '20px',\n});\n\nexport default Movies;","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const KEY_API = '2051bbcb32f4c1cda2d3fefb48b3cd3d';","import axios from 'axios';\nimport { BASE_URL, KEY_API } from './baseURL';\n\n//***The list of the most popular Movies for Today to create a collection on the Main Page\nexport async function getTrendingMovies() {\nconst { data } =\n    await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***Searching for a movie by keyword on the movies page\nexport async function getMovies(searchValue) {\n  const { data } =\n    await axios.get(`${BASE_URL}/search/movie?api_key=${KEY_API}&page=1&query=${searchValue}\n`);\n  return data;\n};\n\n// ***The request of full movie information for a movie page\nexport async function getMovieDetails(id) {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***The request of cast information for a movie page\nexport async function getMovieCredits(id) {\n  const { data } =\n    await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}\n`);\n  return data;\n};\n\n// ***The request of reviews for a movie page\nexport async function getMovieReviews(id) {\n  const { data } =\n    await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}\n`);\n  return data;\n};\n"],"names":["MovieName","styled","MovieLink","Link","MovieLi","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","release_date","slice","Input","Notiflix","width","position","distance","timeout","fontSize","useState","setMovies","useSearchParams","searchParams","setSearchParams","name","get","useEffect","getMovies","then","data","results","length","catch","error","console","log","getEffectMovies","onSubmit","event","preventDefault","movieName","target","value","trim","reset","type","placeholder","BASE_URL","KEY_API","getTrendingMovies","axios","searchValue","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}